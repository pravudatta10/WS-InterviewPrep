1. Text Blocks:
    Text blocks, introduced in Java 13, allow you to define multi-line string literals using triple quotes ("""). They preserve the formatting of the text inside them, making it easier to write strings that span multiple lines without needing to escape characters or use concatenation.

2. Switch Expressions:
    Introduced in Java 12 and further enhanced in Java 14, switch expressions allow you to use a switch statement as an expression, which can return a value. You can use the yield keyword to return a value from a case. Switch expressions can also handle multiple values for a single case using -> syntax, allowing for more concise and flexible logic.

3. Records:
    Records, introduced in Java 14, are a new type of class in Java that act as immutable data carriers. They automatically provide implementations for equals(), hashCode(), and toString() methods, and are designed to simplify the creation of classes that are primarily used to store data.

4. JVM Enhancement (Metaspace):
    The removal of PermGen space and introduction of Metaspace occurred in Java 8. Metaspace is a native memory area used by the JVM to store class metadata. Unlike PermGen, Metaspace automatically expands, using available system memory, which can help prevent OutOfMemoryError related to class metadata. However, if not managed properly, it can lead to excessive memory usage, potentially affecting the system's stability.

5. var Keyword:
    Introduced in Java 10, the var keyword allows for local variable type inference, meaning the compiler can infer the type of a variable based on the context. It simplifies code by reducing verbosity, but it is limited to local variables and cannot be used for fields, method parameters, or return types. 
